/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FCCAdminWorkArea;

import Business.EcoSystem;
import Business.Emergency.Emergency;
import Business.Enterprise.Enterprise;
import Business.Enterprise.GovernmentFccEnterprise;
import Business.Organization.FccCallCenterOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Collections;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author ayushi
 */
public class ViewEmergencyReport extends javax.swing.JPanel {

    /**
     * Creates new form ViewEmergencyReport
     */
    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem system;
    private int medCount = 0;
    private int crimeCount = 0;
    private int carCount = 0;
    private int fireCount = 0;
    public ViewEmergencyReport(JPanel userProcessContainer, OrganizationDirectory organizationDir, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        this.system = business;
        this.enterprise = enterprise;
        locationJTextField.setText(enterprise.getLocation());
        locationJTextField.setEditable(false);
        populate();
    }

    public void populate() {
        
        for (Organization org : organizationDir.getOrganizationList()) {
            if (org instanceof FccCallCenterOrganization) {
                FccCallCenterOrganization callOrg = (FccCallCenterOrganization) org;
                for (UserAccount user : callOrg.getUserAccountDirectory().getUserAccountList()) {
                    int count = 0;
                    for (WorkRequest wr : callOrg.getWorkQueue().getWorkRequestList()) {
                        if (wr.getSender() == user) {
                            
                            count += 1;
                            user.setTemp(count);
                        }
                    }
                }
            }
            
        }
         for (Organization org : organizationDir.getOrganizationList()) {
            if (org instanceof FccCallCenterOrganization) {
                FccCallCenterOrganization callOrg = (FccCallCenterOrganization) org;
       
                Collections.sort(callOrg.getUserAccountDirectory().getUserAccountList());
            }
         }
         
        DefaultTableModel model = (DefaultTableModel) empJTable.getModel();
        model.setRowCount(0);
        for (Organization org : organizationDir.getOrganizationList()) {
            if (org instanceof FccCallCenterOrganization) {
             FccCallCenterOrganization callOrg = (FccCallCenterOrganization) org;   
            
            for (int j = 0; j < 3; j++) {
            UserAccount ua = callOrg.getUserAccountDirectory().getUserAccountList().get(j);
            Object row[] = new Object[3];
            row[0] = ua;
            row[1] = ua.getPerson().getName();
            row[2] = ua.getTemp();
            model.addRow(row);
            
        }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        locationJTextField = new javax.swing.JTextField();
        generate = new javax.swing.JButton();
        panelChart = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empJTable = new javax.swing.JTable();
        backbutton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(154, 192, 205));

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel1.setText("Emergency Statistics in Your Area");

        jLabel2.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        jLabel2.setText("Location : ");

        generate.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        generate.setText("Generate Graph");
        generate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        panelChart.setBackground(new java.awt.Color(255, 255, 255));
        panelChart.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Top 3 Employees At Call Center", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 3, 15))); // NOI18N

        empJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Employee UserName", "Employee Name", "Count of Emergency"
            }
        ));
        jScrollPane1.setViewportView(empJTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        backbutton1.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        backbutton1.setText("<<Back");
        backbutton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbutton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(26, 26, 26)
                                .addComponent(locationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(346, 346, 346)
                                .addComponent(backbutton1)
                                .addGap(53, 53, 53)))))
                .addGap(354, 354, 354))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(locationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generate)
                    .addComponent(backbutton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        // TODO add your handling code here:
         if (enterprise instanceof GovernmentFccEnterprise) {
            GovernmentFccEnterprise gfcc = (GovernmentFccEnterprise) enterprise;
            for (Emergency e : gfcc.getEmergencyDirectory().getEmergencyList()) {
                if (e.getEmergencyType().getValue().equals("Medical")) {
                    medCount +=1;
                } else if (e.getEmergencyType().getValue().equals("Fire")) {
                    fireCount += 1;
                } else if (e.getEmergencyType().getValue().equals("Criminal")) {
                    crimeCount += 1;

                } else {
                    carCount += 1;
                }
            }
        }
        
        
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        barChartData.setValue(medCount, "Count of Emergency", "Medical");
        barChartData.setValue(crimeCount, "Count of Emergency", "Criminal");
        barChartData.setValue(carCount, "Count of Emergency", "CarAccidents");
        barChartData.setValue(fireCount, "Count of Emergency", "Fire");
        
        JFreeChart barChart = ChartFactory.createBarChart("Emergency Statistics","EmergencyType", "Emergency Count", barChartData, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.darkGray);
        
        ChartPanel barPanel = new ChartPanel(barChart);
        panelChart.removeAll();
        panelChart.add(barPanel,BorderLayout.CENTER);
        panelChart.validate();
    }//GEN-LAST:event_generateActionPerformed

    private void backbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbutton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbutton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JButton backbutton1;
    private javax.swing.JTable empJTable;
    private javax.swing.JButton generate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationJTextField;
    private javax.swing.JPanel panelChart;
    // End of variables declaration//GEN-END:variables
}
