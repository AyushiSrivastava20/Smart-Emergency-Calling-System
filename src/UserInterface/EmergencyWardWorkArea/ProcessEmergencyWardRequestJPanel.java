/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EmergencyWardWorkArea;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Patient.Patient;
import Business.WorkQueue.CallCenterRequestAmbulance;
import Business.utils.SpaceStringCheckVerifier;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ayushi
 */
public class ProcessEmergencyWardRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessEmergencyWardRequestJPanel
     */
    private JPanel userProcessContainer;
    private CallCenterRequestAmbulance request;
    private Enterprise enterprise;
    public ProcessEmergencyWardRequestJPanel(JPanel userProcessContainer, CallCenterRequestAmbulance request, Enterprise enterprise ) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.request=request;
        this.enterprise=enterprise;
        SpaceStringCheckVerifier spacecheck= new SpaceStringCheckVerifier();
        messageField.setInputVerifier(spacecheck);

        populate();
        
    }

    public void populate(){
         DefaultTableModel model = (DefaultTableModel) patientJTable.getModel();
         model.setRowCount(0);
         if (enterprise instanceof HospitalEnterprise){
         HospitalEnterprise hospital = (HospitalEnterprise)enterprise;
         for(Patient patient : hospital.getPatientDirectory().getPatientList()){
             if(patient.getEmID()==request.getEmergency().getEmId()){
            Object[] row = new Object[3];
            row[0] = patient;
            row[1] = patient.getStatus();
            row[2] = patient.getRoom_no();
            
            model.addRow(row);
             }
         }
         
         
         }
         
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        messageField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        processRequestButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientJTable = new javax.swing.JTable();
        updatePatient = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setBackground(new java.awt.Color(154, 192, 205));

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel1.setText("Process the Emergency");

        jLabel2.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        jLabel2.setText("Message");

        backJButton.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        processRequestButton.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        processRequestButton.setText("Process Request");
        processRequestButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        processRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestButtonActionPerformed(evt);
            }
        });

        patientJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patientJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Status", "Room No"
            }
        ));
        jScrollPane1.setViewportView(patientJTable);

        updatePatient.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        updatePatient.setText("Update Patient details");
        updatePatient.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(processRequestButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updatePatient)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(36, 36, 36)
                                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updatePatient)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(processRequestButton))
                .addGap(98, 98, 98))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EmergencyRequestWorkAreaJPanel ejp = (EmergencyRequestWorkAreaJPanel) component;
        ejp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void processRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestButtonActionPerformed
        // TODO add your handling code here:
        
        if(messageField.getText().length()==0 )
        {
           JOptionPane.showMessageDialog(null, "Please Enter message fields","Error",JOptionPane.ERROR_MESSAGE);
           return;
        }
        request.setStatusEmergency("Completed");
        request.setMessageEmergency(messageField.getText());
        Date date = new Date();
        request.setResolveDate(date);

        JOptionPane.showMessageDialog(null, "Request Processed Successfully");
        
    }//GEN-LAST:event_processRequestButtonActionPerformed

    private void updatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = patientJTable.getSelectedRow();

        if (selectedRow >= 0) {
            Patient patient = (Patient)patientJTable.getValueAt(selectedRow, 0);
            UpdateProcessPatient upp = new UpdateProcessPatient(userProcessContainer, patient);
                userProcessContainer.add("UpdateProcessPatient", upp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a request message to process","Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_updatePatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField messageField;
    private javax.swing.JTable patientJTable;
    private javax.swing.JButton processRequestButton;
    private javax.swing.JButton updatePatient;
    // End of variables declaration//GEN-END:variables
}
